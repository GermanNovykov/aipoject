import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import category_encoders as ce 
pd.set_option('future.no_silent_downcasting', True)

# TRAINING PART
# IMPORT CSV
hearts = pd.read_csv('train_heart.csv', sep=',')
# FILTER VALUES
chol_median = hearts.loc[hearts['Cholesterol'] != 0, 'Cholesterol'].median()
hearts['Cholesterol'].replace(0, chol_median, inplace=True)

resting_median = hearts.loc[hearts['RestingBP'] != 0, 'RestingBP'].median()
hearts['RestingBP'].replace(0, resting_median, inplace=True)

# # DROP UNNECESSARY COLS AND FIND y
X = hearts.drop(['id', 'HeartDisease'], axis=1)
y = hearts['HeartDisease']

# # ENCODE X
encoder = ce.OrdinalEncoder(cols=X.columns)
X_encoded = encoder.fit_transform(X)

# # DATA SPLICING (TEST AND TRAIN)
X_train, X_test, y_train, y_test = train_test_split(X_encoded, y, test_size=0.3)

# # FIT MODEL
regressor = LinearRegression()
regressor.fit(X_train, y_train)
y_pred = regressor.predict(X_test)

# # Calculating the accuracy
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')

# TESTING PART
# IMPORT CSV
test = pd.read_csv('test_heart.csv', sep=',')
#FILTER VALUES
chol_median = test.loc[test['Cholesterol'] != 0, 'Cholesterol'].median()
test['Cholesterol'].replace(0, chol_median, inplace=True)

resting_median = test.loc[test['RestingBP'] != 0, 'RestingBP'].median()
test['RestingBP'].replace(0, resting_median, inplace=True)

X_new = test.drop(['id'], axis=1)

# # ENCODE X
X_new_encoded = encoder.transform(X_new)

# # PREDICT AND PUT INTO PANDAS DATAFRAME
predictions = regressor.predict(X_new_encoded)
# Round up the predictions to 1 or 0
rounded_predictions = [1 if pred > 0.5 else 0 for pred in predictions]
id_to_prediction_df = pd.DataFrame({
    'id': test['id'],
    'HeartDisease': rounded_predictions
})

# # OUTPUT VIA CSV
file_name = './submissiontest.csv'
id_to_prediction_df.to_csv(file_name, index=False)

print(f"File saved as {file_name}")
